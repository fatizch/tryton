<?xml version="1.0"?>
<!-- This file is part of Coog. The COPYRIGHT file at the top level of
this repository contains the full copyright notices and license terms. -->
<tryton>
    <data>
        <!-- Global Configuration Group -->
        <record model="ir.model.access" id="access_party_configuration_default_configuration_group_global_config">
            <field name="model" search="[('model', '=', 'party.configuration.default_portfolio')]"/>
            <field name="group" ref="coog_core.group_global_config"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_delete" eval="True"/>
        </record>
        <!-- Default Distribution Portfolio Access Rights -->
        <record model="ir.model.access" id="access_party_configuration_default_configuration">
            <field name="model" search="[('model', '=', 'party.configuration.default_portfolio')]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="False"/>
            <field name="perm_create" eval="False"/>
            <field name="perm_delete" eval="False"/>
        </record>
        <!-- Rule access to handle partitioning by portfolio -->
        <!-- ######### Parties  -->
        <record model="ir.rule.group" id="rule_group_portfolio_party">
            <field name="name">In user's portfolios</field>
            <field name="model" search="[('model', '=', 'party.party')]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_delete" eval="True"/>
        </record>
        <record model="ir.rule" id="rule_portfolio_party_1">
            <field name="domain"
                 eval="[[u'portfolio', u'in', Get(Eval(u'user', {}), u'network_portfolios', [])]]" pyson="1"/>
            <field name="rule_group" ref="rule_group_portfolio_party"/>
        </record>
        <record model="ir.rule" id="rule_portfolio_party_2">
            <field name="domain" eval="[[u'portfolio', u'=', None]]" pyson="1"/>
            <field name="rule_group" ref="rule_group_portfolio_party"/>
        </record>
        <!-- ######### Contact Mechanism  -->
        <record model="ir.rule.group" id="rule_group_portfolio_contact_mechanism">
            <field name="name">In user's portfolios</field>
            <field name="model" search="[('model', '=', 'party.contact_mechanism')]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_delete" eval="True"/>
        </record>
        <record model="ir.rule" id="rule_portfolio_contact_mechanism_1">
            <field name="domain"
                 eval="[[u'portfolio', u'in', Get(Eval(u'user', {}), u'network_portfolios', [])]]" pyson="1"/>
            <field name="rule_group" ref="rule_group_portfolio_contact_mechanism"/>
        </record>
        <record model="ir.rule" id="rule_portfolio_contact_mechanism_2">
            <field name="domain" eval="[[u'portfolio', u'=', None]]" pyson="1"/>
            <field name="rule_group" ref="rule_group_portfolio_contact_mechanism"/>
        </record>
        <!-- ######### Relations  -->
        <record model="ir.rule.group" id="rule_group_portfolio_relation">
            <field name="name">In user's portfolios</field>
            <field name="model" search="[('model', '=', 'party.relation.all')]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_delete" eval="True"/>
        </record>
        <record model="ir.rule" id="rule_portfolio_relation_1">
            <field name="domain"
                 eval="[[u'portfolio', u'in', Get(Eval(u'user', {}), u'network_portfolios', [])]]" pyson="1"/>
            <field name="rule_group" ref="rule_group_portfolio_relation"/>
        </record>
        <record model="ir.rule" id="rule_portfolio_relation_2">
            <field name="domain" eval="[[u'portfolio', u'=', None]]" pyson="1"/>
            <field name="rule_group" ref="rule_group_portfolio_relation"/>
        </record>
        <!-- ######### Contracts  -->
        <record model="ir.rule.group" id="rule_group_portfolio_contract">
            <field name="name">In user's portfolios</field>
            <field name="model" search="[('model', '=', 'contract')]"/>
            <field name="perm_read" eval="True"/>
            <field name="perm_write" eval="True"/>
            <field name="perm_create" eval="True"/>
            <field name="perm_delete" eval="True"/>
        </record>
        <record model="ir.rule" id="rule_portfolio_contract_1">
            <field name="domain"
                 eval="[[u'portfolio', u'in', Get(Eval(u'user', {}), u'network_portfolios', [])]]" pyson="1"/>
            <field name="rule_group" ref="rule_group_portfolio_contract"/>
        </record>
        <record model="ir.rule" id="rule_portfolio_contract_2">
            <field name="domain" eval="[[u'portfolio', u'=', None]]" pyson="1"/>
            <field name="rule_group" ref="rule_group_portfolio_contract"/>
        </record>
    </data>
</tryton>
