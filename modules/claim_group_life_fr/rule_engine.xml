<?xml version="1.0" encoding="utf-8"?>
<!-- This file is part of Coog. The COPYRIGHT file at the top level of
this repository contains the full copyright notices and license terms. -->
<tryton>
    <data>
        <!-- DEFAULT BENEFIT RULES -->
        <record model="rule_engine" id="calcul_du_traitement_de_base_journalier_en_fonction_des_tranches">
            <field name="name">Calcul du traitement de base  journalier en fonction des tranches</field>
            <field name="short_name">coog_calcul_du_traitement_de_base_journalier_en_fonction_des_tranches</field>
            <field name="algorithm">description = u''
calcul_salaire = param_methode_de_traitement_de_reference()
donnees_salaire = ['gross_salary' if 'brut' in calcul_salaire else 'net_salary']
if 'prime' in calcul_salaire:
    donnees_salaire.append('salary_bonus')
tranches = tranche_salaire(donnees_salaire)

tranches['TA'] = arrondir(tranches['TA'], 0.01)
tranches['TB'] = arrondir(tranches['TB'], 0.01)
tranches['TC'] = arrondir(tranches['TC'], 0.01)

traitement_de_reference = tranches['TA'] + tranches['TB'] + tranches['TC']
traitement_de_base = 0
trancheTA, trancheTB, trancheTC = 0, 0, 0
pourcentage_TA = param_pourcentage_ij_ta()
pourcentage_TB = param_pourcentage_ij_tb()
pourcentage_TC = param_pourcentage_ij_tc()
if pourcentage_TA:
    trancheTA = arrondir(pourcentage_TA * tranches['TA'] / 100.0, 0.01)
    traitement_de_base += trancheTA
    description += u'Traitement de base (TA): %s * %s /100 = %s€\n' % (pourcentage_TA, tranches['TA'], trancheTA)
if pourcentage_TB:
    trancheTB = arrondir(pourcentage_TB * tranches['TB'] / 100.0, 0.01)
    traitement_de_base += trancheTB
    description += u'Traitement de base (TB): %s * %s /100 = %s€\n' % (pourcentage_TB, tranches['TB'], trancheTB)
if pourcentage_TC:
    trancheTC = arrondir(pourcentage_TC * tranches['TC'] / 100.0, 0.01)
    traitement_de_base += trancheTC
    description += u'Traitement de base (TC): %s * %s /100 = %s€\n' % (pourcentage_TC, tranches['TC'], trancheTC)
description += u'Traitement de base: %s\n' % traitement_de_base
traitement_journalier = arrondir(traitement_de_base / 365, 0.01)

description += u'Traitement de base journalier: %s / 365 = %s€\n\n' % (traitement_de_base, traitement_journalier)
return traitement_journalier, traitement_de_reference, trancheTA, trancheTB, trancheTC, description</field>
            <field name="status">validated</field>
            <field name="type_">benefit</field>
            <field name="context" ref="rule_engine.default_context"/>
        </record>
        <record model="rule_engine.rule_parameter" id="pourcentage_ij_ta_calcul_du_traitement_de_base_journalier_en_fonction_des_tranches">
            <field name="name">pourcentage_ij_ta</field>
            <field name="type_">integer</field>
            <field name="string">Pourcentage TA</field>
            <field name="parent_rule" ref="calcul_du_traitement_de_base_journalier_en_fonction_des_tranches"/>
        </record>
        <record model="rule_engine.rule_parameter" id="pourcentage_ij_tb_calcul_du_traitement_de_base_journalier_en_fonction_des_tranches">
            <field name="name">pourcentage_ij_tb</field>
            <field name="type_">integer</field>
            <field name="string">Pourcentage TB</field>
            <field name="parent_rule" ref="calcul_du_traitement_de_base_journalier_en_fonction_des_tranches"/>
        </record>
        <record model="rule_engine.rule_parameter" id="_pourcentage_ij_tc_calcul_du_traitement_de_base_journalier_en_fonction_des_tranches">
            <field name="name">pourcentage_ij_tc</field>
            <field name="type_">integer</field>
            <field name="string">Pourcentage TC</field>
            <field name="parent_rule" ref="calcul_du_traitement_de_base_journalier_en_fonction_des_tranches"/>
        </record>
        <record model="rule_engine.rule_parameter" id="methode_de_traitement_de_reference_calcul_du_traitement_de_base_journalier_en_fonction_des_tranches">
            <field name="name">methode_de_traitement_de_reference</field>
            <field name="type_">selection</field>
            <field name="selection">salaire_brut:Salaire Brut
salaire_net:Salaire Net
salaire_brut_prime:Salaire Brut + Primes
salaire_net_prime:Salaire Net + Primes</field>
            <field name="string">Méthode de traitement de référence</field>
            <field name="parent_rule" ref="calcul_du_traitement_de_base_journalier_en_fonction_des_tranches"/>
        </record>
        <record model="rule_engine" id="traitement_journalier_par_tranche_de_salaire">
            <field name="name">Traitement journalier par tranche de salaire</field>
            <field name="short_name">coog_traitement_journalier_par_tranche_de_salaire</field>
            <field name="algorithm"># Pas d'indémnisation si IJSS nulle ou si + de 1095 jours
IJSS = compl_ijss() or Decimal('0.00')
date_debut_periode = date_debut_periode_indemnisation()
date_fin_periode = date_fin_periode_indemnisation()
limite = ajouter_jours(date_de_debut_du_prejudice(), 1095)
traitement_de_reference = param_4_traitement_de_reference()
ijss_non_deduite = param_6_sans_deduction_de_l_ijss()
inclusion_mi_temps = param_5_inclusion_du_mi_temps_therapeutique()
limiter_au_net = param_7_limiter_au_net()
description = u''
TA, TB, TC = param_1_pourcentage_ij_ta(), param_2_pourcentage_ij_tb(), param_3_pourcentage_ij_tc()

if (not IJSS and not ijss_non_deduite) or date_fin_periode &gt; limite:
    if not IJSS:
        description += u"Aucune prestation à verser car l'IJSS est nulle\n"
    else:
        description += u"La période à calculer est au dessus de la limite des 1095 jours, soit le %s" % formater_date(limite)
    return ([{
            'start_date': date_debut_periode,
            'end_date': date_fin_periode,
            'nb_of_unit': (date_fin_periode - date_debut_periode).days + 1,
            'unit': 'day',
            'amount': Decimal(0),
            'base_amount': Decimal(0),
            'amount_per_unit': Decimal(0),
            'description': description,
            }])

# Calcul du traitement de base journalier en fonction des tranches
traitement_journalier_base, traitement_de_reference, trancheTA, trancheTB, trancheTC, description_compl = rule_coog_calcul_du_traitement_de_base_journalier_en_fonction_des_tranches(
    pourcentage_ij_ta=TA, pourcentage_ij_tb=TB, pourcentage_ij_tc=TC, methode_de_traitement_de_reference=traitement_de_reference)
description += description_compl

# Calcul du mi-temps
traitement_journalier_base, montant_mi_temps, description_compl = rule_coog_regle_de_calcul_des_deductions_des_montants_percus(
    traitement_de_base_journalier=traitement_journalier_base, ijss=IJSS, inclusion_du_mi_temps_therapeutique=inclusion_mi_temps, sans_deduction_de_l_ijss=ijss_non_deduite, traitement_de_reference=traitement_de_reference)
description += description_compl

# Calcul des limitations
traitement_journalier_de_base, description_compl = rule_coog_calcul_des_limitations_du_traitement_journalier(
    ijss=IJSS, traitement_de_reference=traitement_de_reference, inclusion_du_mi_temps_therapeutique=inclusion_mi_temps, 
    sans_deduction_de_l_ijss=ijss_non_deduite, montant_du_mi_temps_therapeutique=montant_mi_temps, 
    limiter_au_net=limiter_au_net, traitement_journalier_de_base=traitement_journalier_base)
description += description_compl

# Calcul des périodes d'indemnisation
return rule_coog_calcul_des_periodes_d_indemnisation(
    traitement_journalier_de_base=traitement_journalier_de_base, description=description, tranche_ta=trancheTA, tranche_tb=trancheTB, tranche_tc=trancheTC, ijss=IJSS)
</field>
            <field name="status">validated</field>
            <field name="type_">benefit</field>
            <field name="context" ref="rule_engine.default_context"/>
        </record>
        <record model="rule_engine.rule_parameter" id="1_pourcentage_ij_ta_salaire_brut_net_par_tranche_de_salaire">
            <field name="name">1_pourcentage_ij_ta</field>
            <field name="type_">integer</field>
            <field name="string">Pourcentage TA</field>
            <field name="parent_rule" ref="traitement_journalier_par_tranche_de_salaire"/>
        </record>
        <record model="rule_engine.rule_parameter" id="2_pourcentage_ij_tb_salaire_brut_net_par_tranche_de_salaire">
            <field name="name">2_pourcentage_ij_tb</field>
            <field name="type_">integer</field>
            <field name="string">Pourcentage TB</field>
            <field name="parent_rule" ref="traitement_journalier_par_tranche_de_salaire"/>
        </record>
        <record model="rule_engine.rule_parameter" id="3_pourcentage_ij_tc_salaire_brut_net_par_tranche_de_salaire">
            <field name="name">3_pourcentage_ij_tc</field>
            <field name="type_">integer</field>
            <field name="string">Pourcentage TC</field>
            <field name="parent_rule" ref="traitement_journalier_par_tranche_de_salaire"/>
        </record>
        <record model="rule_engine.rule_parameter" id="4_traitement_de_reference_salaire_brut_net_par_tranche_de_salaire">
            <field name="name">4_traitement_de_reference</field>
            <field name="type_">selection</field>
            <field name="selection">salaire_brut:Salaire Brut
salaire_net:Salaire Net
salaire_brut_prime:Salaire Brut + Primes
salaire_net_prime:Salaire Net + Primes</field>
            <field name="string">Traitement de référence</field>
            <field name="parent_rule" ref="traitement_journalier_par_tranche_de_salaire"/>
        </record>
        <record model="rule_engine.rule_parameter" id="5_inclusion_du_mi_temps_salaire_brut_net_par_tranche_de_salaire">
            <field name="name">5_inclusion_du_mi_temps_therapeutique</field>
            <field name="type_">selection</field>
            <field name="selection">ijb_ijss_mtt:Prestation de base - IJSS - mi-temps
min_ijb_2_tdrj_mtt:Minimum de (Prestation base / 2) et (100% traitement de référence - IJSS - mi-temps) 
tdrj_ijss_mtt: 100% Traitement de référénce - IJSS - mi-temps</field>
            <field name="string">Calcul du mi-temps thérapeutique</field>
            <field name="parent_rule" ref="traitement_journalier_par_tranche_de_salaire"/>
        </record>
        <record model="rule_engine.rule_parameter" id="6_deduction_de_l_ijss_salaire_brut_net_par_tranche_de_salaire">
            <field name="name">6_sans_deduction_de_l_ijss</field>
            <field name="type_">boolean</field>
            <field name="string">Sans déduction de l'IJSS</field>
            <field name="parent_rule" ref="traitement_journalier_par_tranche_de_salaire"/>
        </record>
        <record model="rule_engine.rule_parameter" id="7_limiter_au_net_salaire_brut_net_par_tranche_de_salaire">
            <field name="name">7_limiter_au_net</field>
            <field name="type_">boolean</field>
            <field name="string">Limiter au net</field>
            <field name="parent_rule" ref="traitement_journalier_par_tranche_de_salaire"/>
        </record>
        <record model="rule_engine-extra_data" id="rule_extra_data_ijss_traitement_journalier_par_tranche_de_salaire">
            <field name="parent_rule" ref="traitement_journalier_par_tranche_de_salaire"/>
            <field name="extra_data" ref="claim_group_life_fr.ijss_extra_data"/>
        </record>
        <record model="rule_engine" id="regle_de_calcul_des_deductions_des_montants_percus">
            <field name="name">Règle de calcul des déductions des montants percus</field>
            <field name="short_name">coog_regle_de_calcul_des_deductions_des_montants_percus</field>
            <field name="algorithm">date_debut_periode = date_debut_periode_indemnisation()
date_fin_periode = date_fin_periode_indemnisation()
description = u''
traitement_journalier_base_originel = param_traitement_de_base_journalier()
IJSS = param_ijss()
IJSS_deduite = not param_sans_deduction_de_l_ijss()
traitement_de_reference = param_traitement_de_reference()

traitement_journalier_base = traitement_journalier_base_originel
traitement_reference_journalier = arrondir(traitement_de_reference / 365, 0.01)
montant_mi_temps = arrondir(montant_de_deduction('part_time', date_debut_periode, date_fin_periode), 0.01)
# Application de la règle de mi-temps thérapeutique si il y à un montant de mi-temps
if montant_mi_temps:
    montant_mi_temps_total = montant_mi_temps * ((date_fin_periode - date_debut_periode).days + 1)
    montant_mi_temps_total = arrondir(montant_mi_temps_total, 0.01)
    montant_mi_temps = arrondir(montant_mi_temps, 0.01)
    description += u'Versement employeur - Mi temps thérapeutique: %s euros (montant journalier: %s€)\n\n' % (montant_mi_temps_total, montant_mi_temps)
    if param_inclusion_du_mi_temps_therapeutique() == 'ijb_ijss_mtt':
        traitement_journalier_base = traitement_journalier_base_originel - IJSS - montant_mi_temps
        description += u'Limitation du mi-temps thérapeuthique (Traitement de référence - IJSS - montant percu en mi-temps): %s€ - %s€ - %s€ = %s€\n' % (
            traitement_journalier_base_originel, IJSS, montant_mi_temps, traitement_journalier_base)
    elif param_inclusion_du_mi_temps_therapeutique() == 'tdrj_ijss_mtt':
        traitement_journalier_base = traitement_reference_journalier - IJSS - montant_mi_temps
        description += u'Limitation du mi-temps thérapeuthique (100 %% du traitement journalier de référence - IJSS - montant percu en mi-temps): %s€ - %s€ - %s€ = %s€\n' % (
            traitement_reference_journalier, IJSS, montant_mi_temps, traitement_journalier_base)
    elif param_inclusion_du_mi_temps_therapeutique() == 'min_ijb_2_tdrj_mtt':
        ijb_ijss_mtt = traitement_journalier_base_originel - IJSS - montant_mi_temps
        tdrj_divise_par_deux =  arrondir(traitement_reference_journalier / 2, 0.01)
        traitement_journalier_base = min(ijb_ijss_mtt, tdrj_divise_par_deux)
        if tdrj_divise_par_deux > ijb_ijss_mtt:
            description += u'Limitation du mi-temps thérapeuthique (Ij de base - IJSS - montant percu en mi-temps): %s€ - %s€ - %s€ = %s€\n' % (
                traitement_journalier_base_originel, IJSS, montant_mi_temps, traitement_journalier_base)
        else:
            description += u'Limitation du mi-temps thérapeuthique (100%% traitement journalier de référence / 2 - IJSS - montant percu en mi-temps): %s€ - %s€ - %s€ = %s€\n' % (
                tdrj_divise_par_deux, IJSS, montant_mi_temps, traitement_journalier_base)
    else:
        ajouter_erreur(u"La règle de mi-temps thérapeutique est inconnue")
else:
    traitement_journalier_base = traitement_journalier_base - (IJSS if IJSS_deduite else 0)
    if IJSS_deduite:
        description += u"Traitement de base journalier déduit de l'IJSS: %s€ - %s€ = %s€\n" % (traitement_journalier_base_originel, IJSS, traitement_journalier_base)
    else:
        description += u"Traitement de base journalier sans déduction de l'IJSS: %s€\n" % traitement_journalier_base
return traitement_journalier_base, montant_mi_temps, description</field>
            <field name="status">validated</field>
            <field name="type_">benefit</field>
            <field name="context" ref="rule_engine.default_context"/>
        </record>
        <record model="rule_engine.rule_parameter" id="traitement_de_base_journalier_regle_de_calcul_des_deductions_des_montants_percus">
            <field name="name">traitement_de_base_journalier</field>
            <field name="type_">numeric</field>
            <field name="string">Traitement de base journalier</field>
            <field name="digits">8</field>
            <field name="parent_rule" ref="regle_de_calcul_des_deductions_des_montants_percus"/>
        </record>
        <record model="rule_engine.rule_parameter" id="ijss_regle_de_calcul_des_deductions_des_montants_percus">
            <field name="name">ijss</field>
            <field name="type_">numeric</field>
            <field name="string">IJSS</field>
            <field name="digits">8</field>
            <field name="parent_rule" ref="regle_de_calcul_des_deductions_des_montants_percus"/>
        </record>
        <record model="rule_engine.rule_parameter" id="inclusion_du_mi_temps_therapeutique_regle_de_calcul_des_deductions_des_montants_percus">
            <field name="name">inclusion_du_mi_temps_therapeutique</field>
            <field name="type_">selection</field>
            <field name="selection">jb_ijss_mtt:IJ de base - IJSS - mi-temps</field>
            <field name="string">Calcul du mi-temps thérapeutique</field>
            <field name="parent_rule" ref="regle_de_calcul_des_deductions_des_montants_percus"/>
        </record>
        <record model="rule_engine.rule_parameter" id="deduction_de_l_ijss_regle_de_calcul_des_deductions_des_montants_percus">
            <field name="name">sans_deduction_de_l_ijss</field>
            <field name="type_">boolean</field>
            <field name="string">Sans déduction de l'IJSS</field>
            <field name="parent_rule" ref="regle_de_calcul_des_deductions_des_montants_percus"/>
        </record>
        <record model="rule_engine.rule_parameter" id="traitement_de_reference_regle_de_calcul_des_deductions_des_montants_percus">
            <field name="name">traitement_de_reference</field>
            <field name="type_">numeric</field>
            <field name="string">Traitement de référence</field>
            <field name="digits">8</field>
            <field name="parent_rule" ref="regle_de_calcul_des_deductions_des_montants_percus"/>
        </record>
        <record model="rule_engine" id="calcul_des_limitations_du_traitement_journalier">
            <field name="name">Calcul des limitations du traitement journalier</field>
            <field name="short_name">coog_calcul_des_limitations_du_traitement_journalier</field>
            <field name="algorithm">date_debut_periode = date_debut_periode_indemnisation()
date_fin_periode = date_fin_periode_indemnisation()
traitement_de_reference = param_traitement_de_reference()
description = u''
IJSS = param_ijss()
IJSS_deduite = not param_sans_deduction_de_l_ijss()
limiter_au_net = param_limiter_au_net()
montant_mi_temps = param_montant_du_mi_temps_therapeutique()
calcul_du_net = limite_au_net()
traitement_journalier_base = param_traitement_journalier_de_base()

# Limitation au salaire de base    
traitement_de_reference_journalier = arrondir(traitement_de_reference / 365, 0.01)
# Limiter à 100% du salaire de base
if traitement_journalier_base &gt; traitement_de_reference_journalier - (IJSS if IJSS_deduite else 0) - montant_mi_temps:
    traitement_journalier_base = traitement_de_reference_journalier - (IJSS if IJSS_deduite else 0) - montant_mi_temps
    description += u'Limitation à 100 pourcent du salaire soit %s€\n' % max(traitement_journalier_base, 0)

# IJSS
IJSS_total = IJSS * ((date_fin_periode - date_debut_periode).days + 1)
description += u'Versement sécurité sociale: %s€ (IJSS: %s€)\n\n' % (IJSS_total, IJSS)

# Limitation au net
if calcul_du_net and limiter_au_net:
    salaire_net_journalier = arrondir(salaire_net() / 365, 0.01)
    ajouter_info(salaire_net_journalier)
    ajouter_info(traitement_journalier_base)
    if traitement_journalier_base &gt; salaire_net_journalier - (IJSS if IJSS_deduite else 0) - montant_mi_temps:
        traitement_journalier_base = salaire_net_journalier - (IJSS if IJSS_deduite else 0) - montant_mi_temps
        description += u'Limitation à 100 pourcent du salaire net soit %s€\n' % max(traitement_journalier_base, 0)

if traitement_journalier_base &lt; 0:
    traitement_journalier_base = 0

return traitement_journalier_base, description</field>
            <field name="status">validated</field>
            <field name="type_">benefit</field>
            <field name="context" ref="rule_engine.default_context"/>
        </record>
        <record model="rule_engine.rule_parameter" id="ijss_calcul_des_limitations_du_traitement_journalier">
            <field name="name">ijss</field>
            <field name="type_">numeric</field>
            <field name="string">IJSS</field>
            <field name="digits">8</field>
            <field name="parent_rule" ref="calcul_des_limitations_du_traitement_journalier"/>
        </record>
        <record model="rule_engine.rule_parameter" id="traitement_de_reference_calcul_des_limitations_du_traitement_journalier">
            <field name="name">traitement_de_reference</field>
            <field name="type_">numeric</field>
            <field name="string">Traitement de référence</field>
            <field name="digits">8</field>
            <field name="parent_rule" ref="calcul_des_limitations_du_traitement_journalier"/>
        </record>
        <record model="rule_engine.rule_parameter" id="inclusion_du_mi_temps_therapeutique_calcul_des_limitations_du_traitement_journalier">
            <field name="name">inclusion_du_mi_temps_therapeutique</field>
            <field name="type_">selection</field>
            <field name="selection">ijb_ijss_mtt:Prestation de base - IJSS - mi-temps
min_ijb_2_tdrj_mtt:Minimum de (Prestation de base / 2) et(100% traitement de référence - IJSS - mi-temps) 
tdrj_ijss_mtt: 100% Traitement de référénce - IJSS - mi-temps</field>
            <field name="string">Calcul du mi-temps thérapeutique</field>
            <field name="parent_rule" ref="calcul_des_limitations_du_traitement_journalier"/>
        </record>
        <record model="rule_engine.rule_parameter" id="deduction_de_l_ijss_calcul_des_limitations_du_traitement_journalier">
            <field name="name">sans_deduction_de_l_ijss</field>
            <field name="type_">boolean</field>
            <field name="string">Sans déduction de l'IJSS</field>
            <field name="parent_rule" ref="calcul_des_limitations_du_traitement_journalier"/>
        </record>
        <record model="rule_engine.rule_parameter" id="limiter_au_net_calcul_des_limitations_du_traitement_journalier">
            <field name="name">limiter_au_net</field>
            <field name="type_">boolean</field>
            <field name="string">Limiter au net</field>
            <field name="parent_rule" ref="calcul_des_limitations_du_traitement_journalier"/>
        </record>
        <record model="rule_engine.rule_parameter" id="montant_du_mi_temps_therapeutique_calcul_des_limitations_du_traitement_journalier">
            <field name="name">montant_du_mi_temps_therapeutique</field>
            <field name="type_">numeric</field>
            <field name="string">Montant du mi-temps thérapeutique</field>
            <field name="digits">8</field>
            <field name="parent_rule" ref="calcul_des_limitations_du_traitement_journalier"/>
        </record>
        <record model="rule_engine.rule_parameter" id="traitement_journalier_de_base_calcul_des_limitations_du_traitement_journalier">
            <field name="name">traitement_journalier_de_base</field>
            <field name="type_">numeric</field>
            <field name="string">Traitement journalier de base</field>
            <field name="digits">8</field>
            <field name="parent_rule" ref="calcul_des_limitations_du_traitement_journalier"/>
        </record>
        <record model="rule_engine" id="calcul_des_periodes_d_indemnisation">
            <field name="name">Calcul des périodes d'indemnisation</field>
            <field name="short_name">coog_calcul_des_periodes_d_indemnisation</field>
            <field name="algorithm">date_debut_periode = date_debut_periode_indemnisation()
date_fin_periode = date_fin_periode_indemnisation()
traitement_journalier_base = param_traitement_journalier_de_base()
description = param_description()

return ([{
            'start_date': date_debut_periode,
            'end_date': date_fin_periode,
            'nb_of_unit': (date_fin_periode - date_debut_periode).days + 1,
            'unit': 'day',
            'amount': traitement_journalier_base * ((date_fin_periode - date_debut_periode).days + 1),
            'base_amount': traitement_journalier_base,
            'amount_per_unit': traitement_journalier_base,
            'description': description.encode('utf-8'),
            'limit_date': None,
            'extra_details': {
                'tranche_a': param_tranche_ta(),
                'tranche_b': param_tranche_tb(), 
                'tranche_c': param_tranche_tc(),
                'ijss': param_ijss(),
                }
            }])</field>
            <field name="status">validated</field>
            <field name="type_">benefit</field>
            <field name="context" ref="rule_engine.default_context"/>
        </record>
        <record model="rule_engine.rule_parameter" id="traitement_journalier_de_base_calcul_des_periodes_d_indemnisation">
            <field name="name">traitement_journalier_de_base</field>
            <field name="type_">numeric</field>
            <field name="string">Traitement journalier de base</field>
            <field name="digits">8</field>
            <field name="parent_rule" ref="calcul_des_periodes_d_indemnisation"/>
        </record>
        <record model="rule_engine.rule_parameter" id="description_calcul_des_periodes_d_indemnisation">
            <field name="name">description</field>
            <field name="type_">char</field>
            <field name="string">Description</field>
            <field name="digits">8</field>
            <field name="parent_rule" ref="calcul_des_periodes_d_indemnisation"/>
        </record>
        <record model="rule_engine.rule_parameter" id="tranche_ta_ijss_calcul_des_limitations_du_traitement_journalier">
            <field name="name">tranche_ta</field>
            <field name="type_">numeric</field>
            <field name="string">Tranche TA</field>
            <field name="digits">8</field>
            <field name="parent_rule" ref="calcul_des_periodes_d_indemnisation"/>
        </record>
        <record model="rule_engine.rule_parameter" id="tranche_tb_calcul_des_periodes_d_indemnisation">
            <field name="name">tranche_tb</field>
            <field name="type_">numeric</field>
            <field name="string">Tranche TB</field>
            <field name="digits">8</field>
            <field name="parent_rule" ref="calcul_des_periodes_d_indemnisation"/>
        </record>
        <record model="rule_engine.rule_parameter" id="tranche_tc_calcul_des_periodes_d_indemnisation">
            <field name="name">tranche_tc</field>
            <field name="type_">numeric</field>
            <field name="string">Tranche TC</field>
            <field name="digits">8</field>
            <field name="parent_rule" ref="calcul_des_periodes_d_indemnisation"/>
        </record>
        <record model="rule_engine.rule_parameter" id="ijss_calcul_des_periodes_d_indemnisation">
            <field name="name">ijss</field>
            <field name="type_">numeric</field>
            <field name="string">IJSS</field>
            <field name="digits">8</field>
            <field name="parent_rule" ref="calcul_des_periodes_d_indemnisation"/>
        </record>
        <record model="rule_engine-rule_engine" id="rule_used_calcul_du_traitement_de_base_journalier_en_fonction_des_tranches_traitement_journalier_par_tranche_de_salaire">
            <field name="parent_rule" ref="traitement_journalier_par_tranche_de_salaire"/>
            <field name="rule" ref="calcul_du_traitement_de_base_journalier_en_fonction_des_tranches"/>
        </record>
        <record model="rule_engine-rule_engine" id="rule_used_regle_de_calcul_des_deductions_des_montants_percus_traitement_journalier_par_tranche_de_salaire">
            <field name="parent_rule" ref="traitement_journalier_par_tranche_de_salaire"/>
            <field name="rule" ref="regle_de_calcul_des_deductions_des_montants_percus"/>
        </record>
        <record model="rule_engine-rule_engine" id="rule_used_calcul_des_limitations_du_traitement_journalier_traitement_journalier_par_tranche_de_salaire">
            <field name="parent_rule" ref="traitement_journalier_par_tranche_de_salaire"/>
            <field name="rule" ref="calcul_des_limitations_du_traitement_journalier"/>
        </record>
        <record model="rule_engine-rule_engine" id="rule_used_calcul_des_periodes_d_indemnisation_traitement_journalier_par_tranche_de_salaire">
            <field name="parent_rule" ref="traitement_journalier_par_tranche_de_salaire"/>
            <field name="rule" ref="calcul_des_periodes_d_indemnisation"/>
        </record>
        <record model="rule_engine" id="franchise_base_sur_un_nombre_de_jour_defaut">
            <field name="name">Franchise basée sur un nombre de jours</field>
            <field name="short_name">coog_franchise_base_sur_un_nombre_de_jour_defaut</field>
            <field name="algorithm"># gestion de la rechute
date_prejudice = param_date_de_prejudice() or date_de_debut_du_prejudice()
if est_une_rechute():
    return ajouter_jours(date_prejudice, -1)

# recherche des jours de franchise déjà utilisés
nb_jour = param_nombre_de_jours_de_franchise()
if param_type_de_franchise() == 'cumulee_sur_365_jours':
    date_fin = date_prejudice
    date_fin = ajouter_jours(date_fin, -1)
    date_debut = ajouter_jours(date_fin, -365)
    nb_franchise_cumulee = nb_jour_franchise(date_debut, date_fin)
    nb_jour -= nb_franchise_cumulee
elif param_type_de_franchise() == '12_mois_glissants':
    date_fin = date_prejudice
    date_fin = ajouter_jours(date_fin, -1)
    date_debut = ajouter_mois(date_fin, -12)
    nb_franchise_cumulee = nb_jour_franchise(date_debut, date_fin)
    nb_jour -= nb_franchise_cumulee
elif param_type_de_franchise() == 'cumulee_sur_annee_civile':
    date_fin = date_prejudice
    date_fin = ajouter_jours(date_fin, -1)
    date_debut = datetime.date(date_prejudice.year, 1, 1)
    nb_franchise_cumulee = nb_jour_franchise(date_debut, date_fin)
    nb_jour -= nb_franchise_cumulee
    
nb_jour = max(nb_jour, 0)
return ajouter_jours(date_prejudice, nb_jour - 1)</field>
            <field name="status">validated</field>
            <field name="type_">benefit_deductible</field>
            <field name="context" ref="rule_engine.default_context"/>
        </record>
        <record model="rule_engine.rule_parameter" id="1_type_de_franchise_base_sur_un_nombre_de_jour_defaut">
            <field name="name">type_de_franchise</field>
            <field name="type_">selection</field>
            <field name="selection">continue:Continue
cumulee_sur_365_jours:Cumulée sur les 365 jours précédant l'arrêt
12_mois_glissants:Cumulée sur 12 mois glissants
cumulee_sur_annee_civile:Cumulée sur l'année civile</field>
            <field name="string">Type de franchise</field>
            <field name="parent_rule" ref="franchise_base_sur_un_nombre_de_jour_defaut"/>
        </record>
        <record model="rule_engine.rule_parameter" id="2_nombre_de_jours_de_franchise_base_sur_un_nombre_de_jour_default">
            <field name="name">nombre_de_jours_de_franchise</field>
            <field name="type_">integer</field>
            <field name="string">Nombre de jours de franchise</field>
            <field name="parent_rule" ref="franchise_base_sur_un_nombre_de_jour_defaut"/>
        </record>
        <record model="rule_engine.rule_parameter" id="3_date_de_prejudice_base_sur_un_nombre_de_jour_default">
            <field name="name">date_de_prejudice</field>
            <field name="type_">date</field>
            <field name="string">Date de prejudice</field>
            <field name="parent_rule" ref="franchise_base_sur_un_nombre_de_jour_defaut"/>
        </record>
        <record model="rule_engine" id="franchise_toute_nature_arret_defaut">
            <field name="name">Franchise fixe toute nature d'arrêt confondue</field>
            <field name="short_name">coog_franchise_fixe_toute_nature_d_arret_confondue</field>
            <field name="algorithm">nb_jour = param_nombre_de_jours_de_franchise()
type_franchise = param_type_de_franchise()
code_decision = code_decision_eligibilite_prestation()
date_calcul = date_de_debut_du_prejudice()

# Gestion des declarations tardives
if code_decision == 'coog_accepte_pena_franchise_declaration':
    date_calcul = date_declaration_sinistre()
elif code_decision == 'coog_accepte_pena_declaration_date':
    return date_declaration_sinistre()

return rule_coog_franchise_base_sur_un_nombre_de_jour_defaut(type_de_franchise=type_franchise, nombre_de_jours_de_franchise=nb_jour, date_de_prejudice=date_calcul)</field>
            <field name="status">validated</field>
            <field name="type_">benefit_deductible</field>
            <field name="context" ref="rule_engine.default_context"/>
        </record>
        <record model="rule_engine.rule_parameter" id="1_type_de_franchise_toute_nature_arret_defaut">
            <field name="name">type_de_franchise</field>
            <field name="type_">selection</field>
            <field name="selection">continue:Continue
cumulee_sur_365_jours:Cumulée sur les 365 jours précédant l'arrêt
12_mois_glissants:Cumulée sur 12 mois glissants
cumulee_sur_annee_civile:Cumulée sur l'année civile</field>
            <field name="string">Type de franchise</field>
            <field name="selection_sorted">True</field>
            <field name="parent_rule" ref="franchise_toute_nature_arret_defaut"/>
        </record>
        <record model="rule_engine.rule_parameter" id="2_nombre_de_jours_de_franchise_toute_nature_arret_default">
            <field name="name">nombre_de_jours_de_franchise</field>
            <field name="type_">integer</field>
            <field name="string">Nombre de jours de franchise</field>
            <field name="parent_rule" ref="franchise_toute_nature_arret_defaut"/>
        </record>
        <record model="rule_engine-rule_engine" id="rule_used_toute_nature_arret_defaut_base_sur_un_nombre_de_jour_defaut">
            <field name="parent_rule" ref="franchise_toute_nature_arret_defaut"/>
            <field name="rule" ref="franchise_base_sur_un_nombre_de_jour_defaut"/>
        </record>
        <record model="rule_engine" id="franchise_fixe_toute_nature_d_arret_confondue_pour_un_arret_total_defaut">
            <field name="name">Franchise fixe en arrêt total</field>
            <field name="short_name">coog_franchise_fixe_toute_nature_d_arret_confondue_pour_un_arret_total</field>
            <field name="algorithm">nb_jour = param_nombre_de_jours_de_franchise()
type_franchise = param_type_de_franchise()
date_prejudice = date_de_debut_du_prejudice()
code_decision = code_decision_eligibilite_prestation()
date_calcul = date_prejudice

# Gestion des declarations tardives
if code_decision == 'coog_accepte_pena_franchise_declaration':
    date_calcul = date_declaration_sinistre()
elif code_decision == 'coog_accepte_pena_declaration_date':
    return date_declaration_sinistre()

periodes_mtt = periodes_de_deduction('part_time', date_calcul, date_fin_periode_indemnisation())
fin_franchise = rule_coog_franchise_base_sur_un_nombre_de_jour_defaut(type_de_franchise=type_franchise, nombre_de_jours_de_franchise=nb_jour, date_de_prejudice=date_calcul)
for debut_mtt, fin_mtt in periodes_mtt:
    if debut_mtt &lt;= fin_franchise:
        date_calcul = ajouter_jours(fin_mtt, 1)
    else:
       break
    fin_franchise = rule_coog_franchise_base_sur_un_nombre_de_jour_defaut(
        type_de_franchise=type_franchise, nombre_de_jours_de_franchise=nb_jour, date_de_prejudice=date_calcul)
return fin_franchise</field>
            <field name="status">validated</field>
            <field name="type_">benefit_deductible</field>
            <field name="context" ref="rule_engine.default_context"/>
        </record>
        <record model="rule_engine.rule_parameter" id="1_type_de_franchise_fixe_toute_nature_d_arret_confondue_pour_un_arret_total_defaut">
            <field name="name">type_de_franchise</field>
            <field name="type_">selection</field>
            <field name="selection">continue:Continue
cumulee_sur_365_jours:Cumulée sur les 365 jours précédant l'arrêt
12_mois_glissants:Cumulée sur 12 mois glissants
cumulee_sur_annee_civile:Cumulée sur l'année civile</field>
            <field name="string">Type de franchise</field>
            <field name="selection_sorted">True</field>
            <field name="parent_rule" ref="franchise_fixe_toute_nature_d_arret_confondue_pour_un_arret_total_defaut"/>
        </record>
        <record model="rule_engine.rule_parameter" id="2_nombre_de_jours_de_franchise_fixe_toute_nature_d_arret_confondue_pour_un_arret_total_defaut">
            <field name="name">nombre_de_jours_de_franchise</field>
            <field name="type_">integer</field>
            <field name="string">Nombre de jours de franchise</field>
            <field name="parent_rule" ref="franchise_fixe_toute_nature_d_arret_confondue_pour_un_arret_total_defaut"/>
        </record>
        <record model="rule_engine-rule_engine" id="rule_used_toute_nature_arret_total_defaut_base_sur_un_nombre_de_jour_defaut">
            <field name="parent_rule" ref="franchise_fixe_toute_nature_d_arret_confondue_pour_un_arret_total_defaut"/>
            <field name="rule" ref="franchise_base_sur_un_nombre_de_jour_defaut"/>
        </record>

        <record model="extra_data" id="date_d_effet_d_indemnisation_franchise_relais_conventation_defaut">
            <field name="name">date_d_effet_d_indemnisation</field>
            <field name="type_">date</field>
            <field name="string">Date d'effet d'indemnisation</field>
            <field name="kind">benefit</field>
        </record>
        <record model="rule_engine" id="franchise_relais_conventation_defaut">
            <field name="name">Franchise relais convention</field>
            <field name="short_name">coog_franchise_relais_conventation</field>
            <field name="algorithm"># La donnée complémentaire de date d'effet d'indemnisation doit être définie sur la prestation collective.
franchise_min = param_1_nombre_de_jours_de_franchise()
date_indemnisation = compl_date_d_effet_d_indemnisation()

# Calcul de la date de franchise renseignée et du nombre de jours
date_franchise = ajouter_jours(date_indemnisation or date_de_calcul(), -1)

if franchise_min:
    # Calcul de la franchise minimale
    date_franchise_min = rule_coog_franchise_base_sur_un_nombre_de_jour_defaut(
        nombre_de_jours_de_franchise=franchise_min, type_de_franchise='continue', date_de_prejudice=None)
    # Utilisation de la plus grande franchise
    if date_franchise_min > date_franchise:
        date_franchise = date_franchise_min
return date_franchise</field>
            <field name="status">validated</field>
            <field name="type_">benefit_deductible</field>
            <field name="context" ref="rule_engine.default_context"/>
        </record>
        <record model="rule_engine.rule_parameter" id="1_nombre_de_jours_de_franchise_franchise_relais_conventation_defaut">
            <field name="name">1_nombre_de_jours_de_franchise</field>
            <field name="type_">integer</field>
            <field name="string">Nombre de jours de franchise minimum (optionnel)</field>
            <field name="parent_rule" ref="franchise_relais_conventation_defaut"/>
        </record>
        <record model="rule_engine-rule_engine" id="rule_used_franchise_relais_conventation_defaut_base_sur_un_nombre_de_jour_defaut">
            <field name="parent_rule" ref="franchise_relais_conventation_defaut"/>
            <field name="rule" ref="franchise_base_sur_un_nombre_de_jour_defaut"/>
        </record>
        <record model="rule_engine-extra_data" id="rule_extra_data_date_d_effet_d_indemnisation_franchise_relais_conventation_defaut">
            <field name="parent_rule" ref="franchise_relais_conventation_defaut"/>
            <field name="extra_data" ref="date_d_effet_d_indemnisation_franchise_relais_conventation_defaut"/>
        </record>
        <record model="rule_engine" id="franchise_fixe_en_arret_total_maladie_at_mp_maternite_hospi">
            <field name="name">Franchise fixe en arrêt total (Maladie AT/MP maternité hospi)</field>
            <field name="short_name">coog_franchise_fixe_en_arret_total_maladie_at_mp_maternite_hospi</field>
            <field name="algorithm">evenement = code_de_l_evenement_du_prejudice()
type_franchise = param_1_type_de_franchise()
nb_jour = param_2_franchise()
franchise_hospi = param_6_franchise_en_cas_d_hospitalisation()
franchise_mp = param_3_franchise_en_cas_de_maladie_professionnelle()
franchise_at = param_4_franchise_en_cas_d_accident_du_travail()
franchise_mater = param_5_franchise_en_cas_de_maternite()

if nombre_jours_hospitalisation_prejudice() > 0:
    nb_jour = franchise_hospi if franchise_hospi is not None else nb_jour
elif evenement == 'maladie_professionnelle':
    nb_jour = franchise_mp if franchise_mp is not None else nb_jour
elif evenement == 'accident_du_travail':
    nb_jour = franchise_at if franchise_at is not None else nb_jour
elif evenement == 'maternite':
    nb_jour = franchise_mater if franchise_mater is not None else nb_jour

return rule_coog_franchise_fixe_toute_nature_d_arret_confondue_pour_un_arret_total(
    type_de_franchise=type_franchise, nombre_de_jours_de_franchise=nb_jour)</field>
            <field name="status">validated</field>
            <field name="type_">benefit_deductible</field>
            <field name="context" ref="rule_engine.default_context"/>
        </record>
        <record model="rule_engine.rule_parameter" id="1_type_de_franchise_franchise_fixe_en_arret_total_maladie_at_mp_maternite_hospi">
            <field name="name">1_type_de_franchise</field>
            <field name="type_">selection</field>
            <field name="selection">continue:Continue
cumulee_sur_365_jours:Cumulée sur les 365 jours précédant l'arrêt
12_mois_glissants:Cumulée sur 12 mois glissants
cumulee_sur_annee_civile:Cumulée sur l'année civile</field>
            <field name="string">Type de franchise</field>
            <field name="selection_sorted">True</field>
            <field name="parent_rule" ref="franchise_fixe_en_arret_total_maladie_at_mp_maternite_hospi"/>
        </record>
        <record model="rule_engine.rule_parameter" id="2_franchise_franchise_fixe_en_arret_total_maladie_at_mp_maternite_hospi">
            <field name="name">2_franchise</field>
            <field name="type_">integer</field>
            <field name="string">Franchise (jours)</field>
            <field name="parent_rule" ref="franchise_fixe_en_arret_total_maladie_at_mp_maternite_hospi"/>
        </record>
        <record model="rule_engine.rule_parameter" id="3_franchise_en_cas_de_maladie_professionnelle_franchise_fixe_en_arret_total_maladie_at_mp_maternite_hospi">
            <field name="name">3_franchise_en_cas_de_maladie_professionnelle</field>
            <field name="type_">integer</field>
            <field name="string">Franchise en cas de maladie professionnelle (jours)</field>
            <field name="parent_rule" ref="franchise_fixe_en_arret_total_maladie_at_mp_maternite_hospi"/>
        </record>
        <record model="rule_engine.rule_parameter" id="4_franchise_en_cas_d_accident_du_travail_franchise_fixe_en_arret_total_maladie_at_mp_maternite_hospi">
            <field name="name">4_franchise_en_cas_d_accident_du_travail</field>
            <field name="type_">integer</field>
            <field name="string">Franchise en cas d'accident du travail (jours)</field>
            <field name="parent_rule" ref="franchise_fixe_en_arret_total_maladie_at_mp_maternite_hospi"/>
        </record>
        <record model="rule_engine.rule_parameter" id="5_franchise_en_cas_de_maternite_franchise_fixe_en_arret_total_maladie_at_mp_maternite_hospi">
            <field name="name">5_franchise_en_cas_de_maternite</field>
            <field name="type_">integer</field>
            <field name="string">Franchise en cas de maternité (jours)</field>
            <field name="parent_rule" ref="franchise_fixe_en_arret_total_maladie_at_mp_maternite_hospi"/>
        </record>
        <record model="rule_engine.rule_parameter" id="6_franchise_en_cas_d_hospitalisation_franchise_fixe_en_arret_total_maladie_at_mp_maternite_hospi">
            <field name="name">6_franchise_en_cas_d_hospitalisation</field>
            <field name="type_">integer</field>
            <field name="string">Franchise en cas d'hospitalisation (jours)</field>
            <field name="parent_rule" ref="franchise_fixe_en_arret_total_maladie_at_mp_maternite_hospi"/>
        </record>
        <record model="rule_engine-rule_engine" id="rule_used_franchise_fixe_en_arret_total_maladie_at_mp_maternite_hospi_franchise_fixe_toute_nature_d_arret_confondue_pour_un_arret_total_defaut">
            <field name="parent_rule" ref="franchise_fixe_en_arret_total_maladie_at_mp_maternite_hospi"/>
            <field name="rule" ref="franchise_fixe_toute_nature_d_arret_confondue_pour_un_arret_total_defaut"/>
        </record>

        <record model="rule_engine" id="franchise_fixe_en_arret_total_et_mi_temps_therapeutique">
            <field name="name">Franchise fixe arrêt total et temps partiel thérapeuthique</field>
            <field name="short_name">coog_franchise_fixe_en_arret_total_et_mi_temps_therapeutique</field>
            <field name="algorithm">evenement = code_de_l_evenement_du_prejudice()
type_franchise = param_1_type_de_franchise()
nb_jour = param_2_franchise()
franchise_hospi = param_6_franchise_en_cas_d_hospitalisation()
franchise_mp = param_3_franchise_en_cas_de_maladie_professionnelle()
franchise_at = param_4_franchise_en_cas_d_accident_du_travail()
franchise_mater = param_5_franchise_en_cas_de_maternite()

if nombre_jours_hospitalisation_prejudice() > 0:
    nb_jour = franchise_hospi if franchise_hospi is not None else nb_jour
elif evenement == 'maladie_professionnelle':
    nb_jour = franchise_mp if franchise_mp is not None else nb_jour
elif evenement == 'accident_du_travail':
    nb_jour = franchise_at if franchise_at is not None else nb_jour
elif evenement == 'maternite':
    nb_jour = franchise_mater if franchise_mater is not None else nb_jour

return rule_coog_franchise_fixe_toute_nature_d_arret_confondue(
    type_de_franchise=type_franchise, nombre_de_jours_de_franchise=nb_jour)</field>
            <field name="status">validated</field>
            <field name="type_">benefit_deductible</field>
            <field name="context" ref="rule_engine.default_context"/>
        </record>
        <record model="rule_engine.rule_parameter" id="1_type_de_franchise_franchise_fixe_en_arret_total_et_mi_temps_therapeutique">
            <field name="name">1_type_de_franchise</field>
            <field name="type_">selection</field>
            <field name="selection">continue:Continue
cumulee_sur_365_jours:Cumulée sur les 365 jours précédant l'arrêt
12_mois_glissants:Cumulée sur 12 mois glissants
cumulee_sur_annee_civile:Cumulée sur l'année civile</field>
            <field name="string">Type de franchise</field>
            <field name="selection_sorted">True</field>
            <field name="parent_rule" ref="franchise_fixe_en_arret_total_et_mi_temps_therapeutique"/>
        </record>
        <record model="rule_engine.rule_parameter" id="2_franchise_franchise_fixe_en_arret_total_et_mi_temps_therapeutique">
            <field name="name">2_franchise</field>
            <field name="type_">integer</field>
            <field name="string">Franchise (jours)</field>
            <field name="parent_rule" ref="franchise_fixe_en_arret_total_et_mi_temps_therapeutique"/>
        </record>
        <record model="rule_engine.rule_parameter" id="3_franchise_en_cas_de_maladie_professionnelle_franchise_fixe_en_arret_total_et_mi_temps_therapeutique">
            <field name="name">3_franchise_en_cas_de_maladie_professionnelle</field>
            <field name="type_">integer</field>
            <field name="string">Franchise en cas de maladie professionnelle (jours)</field>
            <field name="parent_rule" ref="franchise_fixe_en_arret_total_et_mi_temps_therapeutique"/>
        </record>
        <record model="rule_engine.rule_parameter" id="4_franchise_en_cas_d_accident_du_travail_franchise_fixe_en_arret_total_et_mi_temps_therapeutique">
            <field name="name">4_franchise_en_cas_d_accident_du_travail</field>
            <field name="type_">integer</field>
            <field name="string">Franchise en cas d'accident du travail (jours)</field>
            <field name="parent_rule" ref="franchise_fixe_en_arret_total_et_mi_temps_therapeutique"/>
        </record>
        <record model="rule_engine.rule_parameter" id="5_franchise_en_cas_de_maternite_franchise_fixe_en_arret_total_et_mi_temps_therapeutique">
            <field name="name">5_franchise_en_cas_de_maternite</field>
            <field name="type_">integer</field>
            <field name="string">Franchise en cas de maternité (jours)</field>
            <field name="parent_rule" ref="franchise_fixe_en_arret_total_et_mi_temps_therapeutique"/>
        </record>
        <record model="rule_engine.rule_parameter" id="6_franchise_en_cas_d_hospitalisation_franchise_fixe_en_arret_total_et_mi_temps_therapeutique">
            <field name="name">6_franchise_en_cas_d_hospitalisation</field>
            <field name="type_">integer</field>
            <field name="string">Franchise en cas d'hospitalisation (jours)</field>
            <field name="parent_rule" ref="franchise_fixe_en_arret_total_et_mi_temps_therapeutique"/>
        </record>
        <record model="rule_engine-rule_engine" id="rule_used_franchise_fixe_en_arret_total_et_mi_temps_therapeutique_coog_franchise_fixe_toute_nature_d_arret_confondue">
            <field name="parent_rule" ref="franchise_fixe_en_arret_total_et_mi_temps_therapeutique"/>
            <field name="rule" ref="franchise_toute_nature_arret_defaut"/>
        </record>
    </data>
    <data noupdate="1">
        <record model="rule_engine.function" id="nombre_jours_hospitalisation_prejudice">
            <field name="translated_technical_name">nombre_jours_hospitalisation_prejudice</field>
            <field name="description">Nombre de jour(s) d'hospitalisation du préjudice</field>
            <field name="type">function</field>
            <field name="language" ref="ir.lang_fr"/>
            <field name="namespace">rule_engine.runtime</field>
            <field name="name">_re_total_hospitalisation_period</field>
            <field name="long_description">Retourne le nombre de jours total 
d'hospitalisation d'un événement</field>
            <field name="parent" ref="claim.dossier_sinistre"/>
        </record>
        <record model="rule_engine.function" id="ijss_before_part_time">
            <field name="translated_technical_name">ijss_avant_mi_temps</field>
            <field name="description">IJSS avant mi-temps</field>
            <field name="type">function</field>
            <field name="language" ref="ir.lang_fr"/>
            <field name="namespace">rule_engine.runtime</field>
            <field name="name">_re_ijss_before_part_time</field>
            <field name="long_description">Retourne le montant de l'IJSS avant 
le début de la période de temps partiel</field>
            <field name="parent" ref="claim.dossier_sinistre"/>
        </record>
    </data>
</tryton>
