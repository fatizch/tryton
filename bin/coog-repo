# vim: set ft=sh:
# repositories/projects management - link, git actions, etc

_coog_repo_rm() { # remove all links from wd
    find -type l -delete
}

_coog_repo_list() { # list repositories
    local f
    for f in $(ls -1 "$COOG_ROOT")
    do
        f="$COOG_ROOT/$f"
        [ "$f" != "$COOG_ROOT/coog-doc" ] \
            && [ -d "$f" ] \
            && [ -d "$f/modules" ] \
            && basename "$f"
    done
}

coog_repo_main() { # list repositories
    _coog_repo_list
}

_coog_repo_list_repos() { # guess modules list from link args
    if [ $# -eq 0 ]
    then
        _coog_repo_list
    else
        echo "$@"
    fi
}

_coog_repo_linkm() {
    for repo in $(_coog_repo_list_repos "$@")
    do
        if [ -d "$COOG_ROOT/$repo/modules" ]
        then
            for m in $(ls -1 "$COOG_ROOT/$repo/modules")
            do
                ln -s "$COOG_ROOT/$repo/modules/$m" .
            done
        fi
    done
}

coog_repo_linkm() { # link repos modules - <repos> - default: all
    ( cd "$COOG_TRYTOND/trytond/modules" \
        && _coog_repo_rm \
        && _coog_repo_linkm "$@")
}

_coog_repo_linkp() {
    for repo in $(_coog_repo_list_repos "$@")
    do
        if [ -d "$COOG_ROOT/$repo/plugins" ]
        then
            for p in $(ls -1 "$COOG_ROOT/$repo/plugins")
            do
                ln -s "$COOG_ROOT/$repo/plugins/$p" .
            done
        fi
    done
}

coog_repo_linkp() { # link repos plugins - <repos> - default: all
    ( cd "$COOG_TRYTON/tryton/plugins" \
        && _coog_repo_rm \
        && _coog_repo_linkp "$@")
}

coog_repo_unlinkm() { # unlink all repos modules
    ( cd "$COOG_TRYTOND/trytond/modules" \
        &&_coog_repo_rm)
}

coog_repo_unlinkp() { # unlink all repos plugins
    ( cd "$COOG_TRYTON/tryton/plugins" \
        &&_coog_repo_rm)
}

coog_repo_link() { # link repos - <repos> - default: all
    coog_repo_linkm "$@"
    coog_repo_linkp "$@"
}

coog_repo_unlink() { # unlink all repos
    coog_repo_unlinkm
    coog_repo_unlinkp
}
