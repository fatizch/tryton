# vim: set ft=sh:
# manage unoconv daemon process

_coog_unoconv_connection() {
        local c
        c=`python $COOG_BIN/parse-config.py report unoconv < $COOG_CONF_SRV 2> /dev/null`
        [ ! -z $c ] && echo $c && return
        echo "pipe,name=trytond;urp;StarOffice.ComponentContext"
}

coog_unoconv_start() { # start unoconv listener - [unoconv args]
        local connection
        connection=`_coog_unoconv_connection` || return $?
        HOME=$COOG_TMP/unoconv nohup unoconv --listener -c $connection &>> /dev/null &
        echo unoconv started
}

coog_unoconv_stop() { # stop unoconv listener
        local connection
        connection=`_coog_unoconv_connection` || return $?
        pkill --signal TERM -f "$connection"
}

coog_unoconv_kill() { # kill unoconv listener
        local connection
        connection=`_coog_unoconv_connection` || return $?
        pkill --signal 9 -f "$connection"
}

coog_unoconv_ps() { # print unoconv process info
        local connection
        connection=`_coog_unoconv_connection` || return $?
        pgrep -a -f "$connection"
}

coog_unoconv_test() { # test a pdf conversion with unoconv
        [ -z $1 ] && echo no input file && return 1
        local connection
        connection=`_coog_unoconv_connection` || return $?
        local out_file
        out_file="/tmp/pdf_"`date +%s%N`".pdf"
        unoconv --no-launch -c $connection -f pdf -o $out_file $1
        [ $? -ne 0 ] && echo test ko && return 1
        echo generated file: $out_file
        echo test ok
}
