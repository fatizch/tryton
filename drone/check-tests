#!/bin/sh

# ------------- FETCHING ------------- #
update_git() {
        git clone --depth=1 --recursive --branch "$DRONE_BRANCH" https://github.com/coopengo/trytond.git /workspace/trytond &&
        git clone --depth=1 --recursive --branch "$DRONE_BRANCH" https://github.com/coopengo/trytond-modules.git /workspace/trytond-modules &&
        git clone --depth=1 --recursive --branch "$DRONE_BRANCH" https://github.com/coopengo/proteus.git /workspace/proteus
        (cd /workspace/drone/coog && git fetch --recurse-submodules=yes origin "$DRONE_BRANCH")
}

# ----- GETTING MODULES TO TEST ------ #
get_modules() {
        cd /workspace/drone/coog
        git diff --name-only $(git merge-base origin/"$DRONE_BRANCH" "$DRONE_COMMIT_SHA") "$DRONE_COMMIT_SHA" | grep "^modules" | cut -d "/" -f 2 | sort | uniq
}

# ---------- LINKING MODULES --------- #

init_bin() {
        ln -sf /workspace/tryton/bin/trytond /usr/local/bin/trytond
        ln -sf /workspace/trytond/bin/trytond-admin /usr/local/bin/trytond-admin
}

init_conf() {
        {
                echo "[database]"
                echo "uri = postgresql://postgres:postgres@database:5432"
                echo "[env]"
                echo "testing = True"
                echo "[async]"
                echo "rq = redis://127.0.0.1:6379/1"
        } > /workspace/conf/trytond.conf
}

_link_modules() {
        find /workspace/trytond/trytond/modules -type l -delete
        ln -sf "/workspace/trytond-modules/modules/"* .
        ln -sf "/workspace/drone/coog/modules/"* .
}

link_modules() {
        (cd /workspace/trytond/trytond/modules && _link_modules)
}

test_modules() {
        unset DB_NAME
        unset TRYTOND_CACHE_CLASS
        local module
        for module in $(get_modules)
        do
        	echo "----------------------------"
         	echo "Testing $module..."
         	echo "----------------------------"
         	LOG_LEVEL=DEBUG python -W ignore /workspace/trytond/trytond/tests/run-tests.py \
                -c /workspace/conf/trytond.conf -vv -m $module
        done
}

main() {
        update_git &&
        init_bin && init_conf && link_modules &&
        if [ -n "$DRONE_BRANCH" ]
        then
            	test_modules
        fi
}

main $@
